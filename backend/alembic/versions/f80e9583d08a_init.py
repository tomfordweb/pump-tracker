"""init

Revision ID: f80e9583d08a
Revises: 
Create Date: 2022-02-13 17:32:39.687718

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f80e9583d08a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('avatar_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exercises_avatar_id'), ['avatar_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exercises_id'), ['id'], unique=False)

    op.create_table('microcycles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('avatar_id', sa.Integer(), nullable=True),
    sa.Column('length_in_days', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('microcycles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_microcycles_avatar_id'), ['avatar_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_microcycles_id'), ['id'], unique=False)

    op.create_table('workouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workouts_description'), ['description'], unique=False)
        batch_op.create_index(batch_op.f('ix_workouts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workouts_name'), ['name'], unique=False)

    op.create_table('microcycle_workout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('microcycle_id', sa.Integer(), nullable=True),
    sa.Column('workout_id', sa.Integer(), nullable=True),
    sa.Column('microcycle_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['microcycle_id'], ['microcycles.id'], ),
    sa.ForeignKeyConstraint(['workout_id'], ['workouts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('microcycle_workout', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_microcycle_workout_id'), ['id'], unique=False)

    op.create_table('workout_exercise',
    sa.Column('workouts_id', sa.Integer(), nullable=True),
    sa.Column('exercises_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exercises_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['workouts_id'], ['workouts.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_exercise')
    with op.batch_alter_table('microcycle_workout', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_microcycle_workout_id'))

    op.drop_table('microcycle_workout')
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workouts_name'))
        batch_op.drop_index(batch_op.f('ix_workouts_id'))
        batch_op.drop_index(batch_op.f('ix_workouts_description'))

    op.drop_table('workouts')
    with op.batch_alter_table('microcycles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_microcycles_id'))
        batch_op.drop_index(batch_op.f('ix_microcycles_avatar_id'))

    op.drop_table('microcycles')
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exercises_id'))
        batch_op.drop_index(batch_op.f('ix_exercises_avatar_id'))

    op.drop_table('exercises')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
