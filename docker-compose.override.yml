version: "3"

services:
  frontend:
    build:
      context: ./frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend/public:/app/public
      - ./frontend/src:/app/src
      - ./frontend/package-lock.json:/app/package-lock.json
    command: ["npm", "start"]
    ports:
      - 3000:3000
      - 35729:35729

  backend:
    build:
      context: ./backend
    environment:
      MONGODB_URI: "mongodb://root:example@mongo:27017/"
      # DO NOT USE THIS IN ANYWHERE OTHER THAN A TESTING OR DEVELOPMENT ENVIRONMENT
      SECRET_KEY: "7880a54f2e77f3d7cac9c6d5387e0821b2a4b8a1c6429adaa1d534ad6f6a7120"
    volumes:
      - ./backend/main.py:/app/main.py
      - ./backend/requirements.txt:/app/requirements.txt
    restart: unless-stopped
    entrypoint:
      [
        "uvicorn",
        "main:app",
        "--proxy-headers",
        "--reload",
        "--host",
        "0.0.0.0",
        "--root-path",
        "/api/v1",
      ]
    ports:
      - 8000:8000

  mongo:
    image: mongo
    restart: unless-stopped
    expose:
      - 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    networks:
      - priv-network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  proxy:
    image: nginx:stable-alpine
    # build:
    #   context: ./proxy
    networks:
      - app-network
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 80:80
