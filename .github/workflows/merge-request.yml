name: Pull request workflow

on:
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    env:
      # Obviously, do not use this for anything
      SECRET_KEY: "fcb9aea222d23f0f1cb5c9522cc8fb0bd2b2c3117afd1b95e80874cedce8e30b"
      DATABASE_URI: "sqlite:///test.db"

    steps:
      - uses: actions/checkout@v2
      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install py dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: pytest

  # run-e2e-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Run e2e tests
  #       run: docker-compose -f docker-compose.yml -f docker-compose.e2e.yml up --build --abort-on-container-exit --exit-code-from e2e

  # evaluate-frontend:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "npm"
  #         cache-dependency-path: "**/package-lock.json"

  #     - name: Install js dependencies
  #       working-directory: ./frontend
  #       run: npm ci

  #     - name: Lint app
  #       working-directory: ./frontend
  #       run: npm run lint
